---
- name: Copy sshd config that denies training users
  ansible.builtin.copy:
    src: sshd_deny_training_users.conf
    dest: /etc/ssh/sshd_config.d/deny_training_users.conf
    owner: root
    group: root
    mode: '0644'
  register: sshd_config

- name: Reload sshd if config changed
  ansible.builtin.service:
    name: ssh
    state: reloaded
  when: sshd_config.changed

- name: Create locales directory
  ansible.builtin.file:
    path: /etc/ood/config/locales
    state: directory
    mode: '0755'

- name: Copy locales override file
  ansible.builtin.copy:
    src: locales_en.yml
    dest: /etc/ood/config/locales/en.yml
    owner: root
    group: root
    mode: '0644'

- name: Copy NeSI logo
  ansible.builtin.copy:
    src: nesi.svg
    dest: /var/www/ood/public/nesi.svg
    owner: root
    group: root
    mode: '0644'

- name: Copy NeSI ondemand customisations file
  ansible.builtin.copy:
    src: ondemand_nesi.yml
    dest: /etc/ood/config/ondemand.d/nesi.yml
    owner: root
    group: root
    mode: '0644'

- name: Copy announcement file
  ansible.builtin.copy:
    src: announcement.md
    dest: /etc/ood/config/announcement.md
    owner: root
    group: root
    mode: '0644'

- name: Apache mpm event configuration
  ansible.builtin.template:
    src: mpm_event.conf.j2
    dest: /etc/apache2/mods-available/mpm_event.conf
    owner: root
    group: root
    mode: '0644'
  register: apache_mpm_event_config

- name: Reload apache service
  ansible.builtin.service:
    name: apache2
    state: restarted
  when: apache_mpm_event_config.changed

- name: Setup sudoers rule for listing running pods
  community.general.sudoers:
    name: trainers-get-pods
    state: present
    group: trainers
    commands:
      - /usr/local/bin/kubectl get pods -A
      - /usr/local/bin/kubectl get pods -A -o wide

- name: Setup sudoers rule for trainers to training users
  community.general.sudoers:
    name: trainers-as-training{{ item }}
    state: present
    group: trainers
    runas: training{{ item }}
    commands: ALL
  with_sequence: start=1 end={{ num_users_create|default(1) }}

- name: Copy nesi-get-pods script
  ansible.builtin.copy:
    src: nesi-get-pods.sh
    dest: /usr/local/bin/nesi-get-pods
    owner: root
    group: root
    mode: '0755'

- name: Copy nesi-get-pods-wide script
  ansible.builtin.copy:
    src: nesi-get-pods-wide.sh
    dest: /usr/local/bin/nesi-get-pods-wide
    owner: root
    group: root
    mode: '0755'

- name: Create ondemand_exporter group
  ansible.builtin.group:
    name: ondemand_exporter
    state: present
    system: true

- name: Create ondemand_exporter user
  ansible.builtin.user:
    name: ondemand_exporter
    group: ondemand_exporter
    shell: /sbin/nologin
    home: /var/lib/ondemand_exporter
    system: true
    create_home: false

- name: Download ondemand_exporter binary
  ansible.builtin.get_url:
    url: "https://github.com/OSC/ondemand_exporter/releases/download/v{{ ondemand_exporter_version }}/ondemand_exporter-{{ ondemand_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp/ondemand_exporter-{{ ondemand_exporter_version }}.tar.gz"
    checksum: "{{ ondemand_exporter_checksum }}"

- name: Extract ondemand_exporter binary
  ansible.builtin.unarchive:
    src: "/tmp/ondemand_exporter-{{ ondemand_exporter_version }}.tar.gz"
    dest: /tmp
    extra_opts:
      - --strip-components
      - 1
    remote_src: true
    creates: /tmp/ondemand_exporter

- name: Install ondemand_exporter binary
  ansible.builtin.copy:
    src: /tmp/ondemand_exporter
    dest: /usr/local/bin/ondemand_exporter
    remote_src: true
    owner: root
    group: root
    mode: 0755

- name: Install ondemand_exporter sudo rule
  ansible.builtin.copy:
    src: ondemand_exporter_sudo
    dest: /etc/sudoers.d/ondemand_exporter
    mode: 0440

- name: Install Apache config for ondemand_exporter
  ansible.builtin.copy:
    src: ondemand_exporter_apache.conf
    dest: /etc/apache2/mods-available/status.conf
  notify: Restart httpd

- name: Enable apache mod_status module
  ansible.builtin.command:
    cmd: a2enmod status.load
    creates: /etc/apache2/mods-enabled/status.load
  notify: Restart httpd

- name: Enable apache ondemand_exporter conf
  ansible.builtin.command:
    cmd: a2enmod status.conf
    creates: /etc/apache2/mods-enabled/status.conf
  notify: Restart httpd

- name: Install ondemand_exporter systemd unit file
  ansible.builtin.copy:
    src: ondemand_exporter.service
    dest: /etc/systemd/system/ondemand_exporter.service
  notify:
    - Reload systemd

- name: Flush handlers
  meta: flush_handlers

- name: Start ondemand_exporter service
  ansible.builtin.systemd:
    name: ondemand_exporter
    state: started
    enabled: true
